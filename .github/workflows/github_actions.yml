on:
  push:
    branches: ["chrisoblig2"]

jobs:
  # build-backend:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}
  #     - name: build and push a docker image
  #       uses: docker/build-push-action@v5
  #       with:
  #         context: ./backend
  #         file: Dockerfile
  #         push: true
  #         tags: ${{ secrets.DOCKERHUB_USERNAME }}/webproject-backend:latest
  # build-frontend:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}
      
              

  #     - name: Docker Setup Buildx
  #       uses: docker/setup-buildx-action@v3.2.0
  
  #     - name: build and push a docker image
  #       uses: docker/build-push-action@v5
  #       with:
  #         context: ./frontend
  #         file: Dockerfile
  #         push: true
  #         tags: ${{ secrets.DOCKERHUB_USERNAME }}/webproject-frontend:latest
  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: [build-database, build-frontend, build-backend]
  #   steps:
  #     - name: webfactory/ssh-agent
  #       uses: webfactory/ssh-agent@v0.9.0
  #       with:
  #         ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
  #     - name: Let's add our production server to the list of known servers
  #       run: ssh-keyscan -H ${{ secrets.PROD_SERVER_HOSTNAME }} >> ~/.ssh/known_hosts
  #     - name: Actually triggering deployment
  #       run: ssh -tt ${{ secrets.PROD_SERVER_USERNAME }}@${{ secrets.PROD_SERVER_HOSTNAME }}
  run-tests:
    runs-on: ubuntu-latest
    #needs: [build-backend, build-frontend]  # Ensure backend and frontend builds are complete
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          node-version: '20'

      - name: Install backend dependencies
        run: |
          npm install
        working-directory: ./backend

      - name: Christopher - Backend tests
        run: |
          npm test
          npm start &
        working-directory: ./backend

      - name: Install frontend dependencies
        run: |
          npm install
        working-directory: ./frontend

      - name: Christopher - Frontend tests
        run: |
          npm test
        working-directory: ./frontend